h1. txp-h5bp-theme: the Textpattern CMS default theme (as of v4.5 onwards)

h3. Please note: theme requires Textpattern SVN "revision 3627 or later":http://textpattern.googlecode.com/svn/development/4.x/ (due to use of new tags and HTML5 support)

This project is the default theme that ships as standard with "Textpattern CMS":http://textpattern.com as of v4.5 onwards. It is intended as a starting point for new users learning the Textpattern CMS for the first time or existing users that want to adapt their current code for modern standards, and is not intended as a finished production theme (though you could use it as such if you want to).

h4. Features

# The code is commented throughout with helpful information to help you learn some of the techniques and tags available within Textpattern.
# Current best practices gathered from all over the web - in particular the "HTML5 Boilerplate":http://html5boilerplate.com/.
# Mobile first structure.
# Responsive CSS layout adapts to various device screen sizes, from 320px to over 1280px.
# Adheres to the "Schema.org microdata format":http://schema.org/.
# Includes "Sass":http://sass-lang.com version of CSS for rapid development.
# No images used at all.
# Tested on a wide range of devices, browsers and operating systems.

You can see the latest version of the theme running at "http://www.philwareham.co.uk/":http://www.philwareham.co.uk/.

h2. Before you begin (fresh installs)

h3. Adjust Textpattern preferences

h4. Essential

# Check 'Automatically append comments to articles?' is set to 'no'. "More info":http://textpattern.com/faq/95/comment-display-confusion.
# Check you have the latest Textpattern language database update, new data was added to the Textpattern language server from 31/08/11 onwards specifically to support this theme. Go to the preferences, language tab - if you are not already running the latest language version there will be a prompt to update next to your installed languages. Click on 'update' and an up-to-date language table will be automatically loaded.

h4. Recommended but optional

# You may decide you don't want to leave Textpattern managed images files loose in the 'images' directory - it may be tidier (and more secure) to create an additonal 'cms' directory within the 'images' directory and use that for any Textpattern managed images instead. You then set the Textpattern advance preference 'Image directory' to your new directory 'images/cms'. Make sure that PHP is able to write to 'images/cms' (usually chmod 777) - you can also set the original 'images' directory back to something more secure (such as chmod 755).
# Removing 'sbl.spamhaus.org' from the advanced preference 'Spam blacklists (comma-separated)' may yield a (very minor) speed increase.
# You might want to set 'New comment means site updated?' to 'Yes' since "search engines like fresh content":http://www.seoguide.org/seo201-google-ranking.htm.

h3. Delete surplus forms

There were a number of forms and pages that formed part of the original default theme for Textpattern. For the most part we will be reusing those existing forms with our own code. However, there are some forms you can safely remove from the system as we will not be using them (in fact the original default Textpattern theme does not require them either - they are mostly left over from earlier versions of Textpattern and not used any more).

h4. You can safely delete the following forms from your fresh install:

* link (link type form)
* lofi (article type form)
* noted (link type form)
* popup_comments (comment type form)
* single (article type form)

h2. How to use these files

Textpattern differs from many CMS solutions in that it stores the all template files (used to build the final page a browser sees) directly in the database as 'styles' (the CSS styling), 'pages' (the main page templates) and 'forms' snippets of code and logic that form building blocks within the 'pages'.

However, many coders like to use their preferred IDE (integrated development environment) to write code and leverage all the tools within those applications provide to make code writing easier. That means you will have to copy/paste from your IDE into the corresponding parts of the Textpattern admin-side which adds a bit of time.

With CSS files you could simply use external stylesheet and link in the traditional way (see below). However there is another solution in the form of the "'cnk_versioning' Textpattern plugin":http://forum.textpattern.com/viewtopic.php?id=27516, which effectively moves the 'styles', 'pages' and 'forms' back out of the database and into external directories for easier editing - a good solution when used in combination with an IDE. If you do use that plugin then dropping the files from this project into your correspondingly named directories will suffice. Detailed information on how to use cnk_versioning is "available at the Textpattern forum":http://forum.textpattern.com/viewtopic.php?id=27516.

h3. CSS

h4. /css/default.css

You can either copy/paste the whole stylesheet into admin area -> presentation -> style -> default, and link as:

bc. <txp:css format="link" />

or serve as an external stylesheet and link as (for example):

bc. <link rel="stylesheet" href="/css/default.css">

There are advantages/disadvanatges to both methods...

Keeping style within the database by using the first method means you can make adjustments to the code without the need for FTP or a text editor, but is less flexible because you either lose the tools available in a dedicated IDE (integrated development environment) or have to paste your new code from the IDE which is time consuming. You can however make use of versioning tools such as 'cnk_versioning' Textpattern plugin to streamline this process somewhat (see above). Serving CSS from a mySQL database is significantly slower than serving as a static file.

The second (and recommended) method of serving as an external stylesheet is much more flexible though it relies on you having FTP access to change the CSS files. This static file is quicker for a browser to load, so your page will render slightly faster.

h4. /css/default.scss

"Sass":http://sass-lang.com version of the CSS file, users familiar with the Sass language can utilise this optional source file for rapid development of their own themes.

h3. Forms

The forms follow the cnk_versioning standard of labelling, in that 'xxxx.misc.txp' is a misc type form, 'xxxx.article.txp' is an article type form, etc. This is only for file structure, when you actually create new forms within Textpattern you should *not* include the '.xxxx.txp', just the first part of the filename. See the analytics form description below.

h4. /forms/article_listing.article.txp

Copy/paste over the existing form of the same name that was part of the standard Textpattern install. Used to display listings of articles and is called from the 'default.txp' page when viewing category lists of articles, and the 'archive.txp' page when viewing the archive list of articles.

h4. /forms/comment_form.comment.txp

Copy/paste over the existing form of the same name that was part of the standard Textpattern install. Used to format the form for inputting comments.

h4. /forms/comments_display.article.txp

Copy/paste over the existing form of the same name that was part of the standard Textpattern install. Used to display all the comments features, and calls other comment type forms.

h4. /forms/comments.comment.txp

Copy/paste over the existing form of the same name that was part of the standard Textpattern install. Used to display the individual comments.

h4. /forms/default.article.txp

Copy/paste over the existing form of the same name that was part of the standard Textpattern install. Used to display the written article, either as an individual article of part of a set of articles. When called on an individual article basis this form also calls the 'comments_display.article.txp'.

h4. /forms/files.file.txp

Copy/paste over the existing form of the same name that was part of the standard Textpattern install. You can call this form from within an article by simply using @<txp:file_download id="xxx" />@ (you don't need to specify a form name as 'files' is the default form for files) - you can also call this form from within other any other forms and pages using the same method (just mind your @<p>@'s).

h4. /forms/images.misc.txp

Create a new form in the system with name of 'images' and type of 'misc', then copy/paste the code from this file into it. This form can optionally be used in your page/form templates. You could also, for example, display article_images by inserting the following code into a written article...

bc. notextile. <txp:images form="images" />

...you should use the @notextile.@ prefix in this instance because the HTML @<figure>@ tag cannot be wrapped inside a @<p>@ tag.

h4. /forms/plainlinks.link.txp

Copy/paste over the existing form of the same name that was part of the standard Textpattern install. You can call this form from within a form, page or article by using @<txp:linklist />@ (you don't need to specify a form name as 'plainlinks' is the default form for links).

h4. /forms/search_input.misc.txp

Copy/paste over the existing form of the same name that was part of the standard Textpattern install. Note that this form makes use of the following tag...

bc. <txp:text />

...which is used to target language strings from the database 'txp_lang' table for the language you set in the Textpattern preferences. For example to display 'Search' in your chosen language the tag would be:

bc. <txp:text item="search" />

You can get a idea of the items you can target with this tag by looking through the specific language file within the textpattern -> lang directory which was created as part of your installation. You would probably not use this tag very often unless you were designing a multi-language site as it adds needlessly to the amount of PHP database calls (that is also true for other tags such as @<txp:site_name />@) - it's included here purely as an example of what the tag is for.

h4. /forms/search_results.article.txp

Copy/paste over the existing form of the same name that was part of the standard Textpattern install. This form displays the search results, if any exist.

h3. Pages

h4. /pages/archive.txp

This page template is utilised when viewing a list of articles.

Copy/paste over the existing page of the same name that was part of the standard Textpattern install.

h4. /pages/default.txp

This page template is utilised as the standard page layout.

Copy/paste over the existing page of the same name that was part of the standard Textpattern install.

h4. /pages/error_default.txp

This page template is utilised when viewing a page error (such as a 404 page not found).

Copy/paste over the existing page of the same name that was part of the standard Textpattern install

h3. Design patterns Textile/HTML reference page

h4. /design-patterns-page.textile

This is a reference file you can use when authoring themes, it contains many of the valid HTML5 tags (and their equivalent Textile format where available) that should be accounted for in your designs. Paste this code directly into a Textpattern article (*please note* that some HTML5 tags are not fully supported by browsers yet).

h2. License

Non-core components:

* jQuery: MIT/GPL
* carouFredSel: MIT/GPL
* Google Code Prettify: Apache License v2.0

Everything else:

Released under the GNU General Public License, see license.txt for terms and conditions.