h1. Extra code options

This snippets of code are purely optional and allow you to extend the functionality of the original theme.

h2. Extra code option: analytics

h4. /extra-options-non-core/analytics/analytics.misc.txp

Add "Google Analytics":http://www.google.com/analytics/ tracking to your pages. You can either paste the contents of this form directly into the bottom your page templates (just before the @</body>@ tag) or put a @<txp:output_form form="analytics" />@ tag in the bottom of the your page templates instead, create a new form in the system with name of 'analytics' and type of 'misc', then copy/paste the code from this form into it. Add your unique Google Analytics ID into the code where indicated.

h2. Extra code option: chrome_frame

h4. /extra-options-non-core/chrome_frame/chrome_frame.misc.txp

Add the option for politely informing any users of Internet Explorer 6 that they could install "Chrome Frame":http://code.google.com/chrome/chromeframe/ on their browser to support modern web page layouts. You could also target IE 7 (or newer) if you so desired by amending the code @<!--[if lt IE 7]>@ to @<!--[if lt IE 8]>@ for example for IE 7 (the code @lt IE 8@ means lower than IE 8). You can either paste the contents of this form directly into your page templates (just after @<div class="container">@ is recommended) or put a @<txp:output_form form="chrome_frame" />@ tag in your page templates instead (again, just after @<div class="container">@ is recommended), create a new form in the system with name of 'chrome_frame' and type of 'misc', then copy/paste the code from this form into it.

h4. /extra-options-non-core/code_prettify/chrome_frame.css

CSS code specific to the Chrome Frame message. If you using Sass then refer to the file below instead. Paste this in just before the end of the @media screen section of the stylesheet (i.e. the section before the size specific media queries begin).

h4. /extra-options-non-core/code_prettify/chrome_frame.scss

Sass version of the above CSS file - if you are using Sass to author your CSS then paste this code into the @default.scss@ instead of into the standard CSS file. Paste this in just before the end of the @media screen section of the stylesheet (i.e. the section before the size specific media queries begin).

h2. Extra code option: code_prettify

Google provides scripting to turn code within @<pre>@ tags into colour coded markup. It is recommended that you read the documentation before installation, which is available on the "Google Code Prettify project page":http://google-code-prettify.googlecode.com/svn/trunk/README.html. *Note:* requires Textile v2.3.2 or later.

h4. /extra-options-non-core/code_prettify/code_prettify.css

CSS code specific to the Prettify script. If you using Sass then refer to the file below instead. Paste this in just before the end of the @media screen section of the stylesheet (i.e. the section before the size specific media queries begin).

h4. /extra-options-non-core/code_prettify/code_prettify.scss

Sass version of the above CSS file - if you are using Sass to author your CSS then paste this code into the @default.scss@ instead of into the standard CSS file. Paste this in just before the end of the @media screen section of the stylesheet (i.e. the section before the size specific media queries begin).

h4. /extra-options-non-core/code_prettify/js/google_code_prettify

Place this entire directory into your root /js/ directory. Add a link to the external JavaScript file, as in this example (not necessary if you use yepnope):

bc. <script src="<txp:site_url />js/google-code-prettify/prettify.js"></script>

Here are three ways of activating the script... either via an @onload@ in the @<body>@ tag, for example:

bc. <body onload="prettyPrint()">

Via jQuery (if available), for example:

bc. jQuery(function () {
  window.prettyPrint && prettyPrint();
});

Or for advanced users, loaded via "yepnope:http://yepnopejs.com/, there is an example provided within the directory (code_prettify-yepnope.txp).

Once all required CSS and JavaScript files are in place, the code markup styling can be invoked via HTML or Textile (as of Textile v2.3.2 onwards).

To invoke via HTML without line numbers:

bc. <pre class="prettyprint"><code> ... </code></pre>

To invoke via HTML without line numbers:

bc. <pre class="prettyprint linenums"><code> ... </code></pre>

To invoke via Textile without line numbers:

bc. bc(prettyprint).

To invoke via Textile with line numbers:

bc. bc(prettyprint linenums).

h2. Extra code option: cookie_disclaimer

The "EU cookie law":http://www.cookielaw.org/the-cookie-law-explained.aspx came into effect in Europe (excluding UK) on May 26th 2011 and was adopted in the UK a year later on May 26th 2012. The law requires website owners to make their users aware of cookie use on a website, this takes the form of a disclaimer clearly displayed upon the first visit to your website. If you implement cookies within your site (including use of Google Analytics software) then you must comply with the law and show a clear disclaimer - the module provided here gives that functionality.

h4. /extra-options-non-core/cookie_disclaimer/cookie_disclaimer.css

CSS code specific to the cookie disclaimer. If you using Sass then refer to the file below instead. Paste this in just before the end of the @media screen section of the stylesheet (i.e. the section before the size specific media queries begin).

h4. /extra-options-non-core/cookie_disclaimer/cookie_disclaimer.scss

Sass version of the above CSS file - if you are using Sass to author your CSS then paste this code into the @default.scss@ instead of into the standard CSS file. Paste this in just before the end of the @media screen section of the stylesheet (i.e. the section before the size specific media queries begin).

h4. /extra-options-non-core/cookie_disclaimer/cookie_disclaimer.txp

You can either paste the contents of this form directly into the bottom your page templates (just before the @</body>@ tag) or put a @<txp:output_form form="cookie_disclaimer" />@ tag in the bottom of the your page templates instead, create a new form in the system with name of 'cookie_disclaimer' and type of 'misc', then copy/paste the code from this form into it. You must also have "jQuery":https://github.com/philwareham/txp-h5bp-theme/tree/master/extra-options-non-core#extra-code-option-jquery available and linked. Add this code *after* the jQuery link in your page (not necessary if you use yepnope).

h4. /extra-options-non-core/cookie_disclaimer/cookie_disclaimer-yepnope.txp

For advanced users, you can alternatively load the disclaimer JavaScript via "yepnope":http://yepnopejs.com/.

h4. /extra-options-non-core/cookie_disclaimer/js/jquery.cookie.js

Place this file into your root /js/ directory (you may wish to "minify":http://en.wikipedia.org/wiki/Minification_(programming) it first to reduce the file size).

h2. Extra code option: facebook

h4. /extra-options-non-core/google_plus/facebook_like.txp

Add a Facebook 'Like' button to each of your articles. Paste the code from that form into your default.article.txp form (around line 25 is recommended).

h2. Extra code option: flickr

h4. /extra-options-non-core/flickr/flickr.css

CSS code specific to the Flickr feed. If you using Sass then refer to the file below instead. Paste this in just before the end of the @media screen section of the stylesheet (i.e. the section before the size specific media queries begin).

h4. /extra-options-non-core/flickr/flickr.scss

Sass version of the above CSS file - if you are using Sass to author your CSS then paste this code into the @default.scss@ instead of into the standard CSS file. Paste this in just before the end of the @media screen section of the stylesheet (i.e. the section before the size specific media queries begin).

h4. /extra-options-non-core/flickr/flickr.txp

Either paste this file into page templates before the end of the @role="complementary"@ sidebar. Or put a @<txp:output_form form="flickr" />@ tag in your page templates @role="complementary"@ sidebar instead, create a new form in the system with name of 'flickr' and type of 'misc', then copy/paste the code from this form into it.

Remember to change the text @your_flickr_badge_id@ to your actual "Flickr ID":http://www.adamwlewis.com/articles/what-is-my-flickr-id and @your_flickr_url@ to your actual Flickr URL.

h2. Extra code option: footer_copyright

h4. /extra-options-non-core/footer_copyright/footer.txp

Add dynamically updated copyright statement to your page footers. Paste the code into your current page templates, replacing the previous footer code. Note this code requires that you have 'Allow PHP in pages?' set to 'yes' in the Textpattern advanced preferences.

h4. /extra-options-non-core/footer_copyright/footer-roman.txp

Same as @footer.txp@ above, but displaying roman numerals for the year instead - BBC style. Otherwise, installation instructions apply as for above.

h2. Extra code option: google_plus

h4. /extra-options-non-core/google_plus/google_plus1.txp

Add a Google '+1' button to each of your articles. Paste the code from that form into your default.article.txp form (around line 25 is recommended).

h2. Extra code option: jquery

h4. /extra-options-non-core/jquery/jquery.txp

You can either paste the contents of this form directly into your page templates or put a @<txp:output_form form="jquery" />@ tag in your page templates instead, create a new form in the system with name of 'jquery' and type of 'misc', then copy/paste the code from this form into it. Note that preferred link is via Google's CDN hosted copy of jQuery, with a fallback to the locally hosted copy if the CDN is unavailable.

bc. <script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script>window.jQuery || document.write('<script src="<txp:site_url />js/libs/jquery.js"><\/script>')</script>

The advantages of using the CDN version over your own hosted copy is threefold - one, it saves bandwidth on your own server; two, Google's servers are extremely low latency and high bandwidth; three, there is a fair chance an end user will already have a copy of Google's CDN jQuery already cached in their browser if they have been to another site that has also used this method to provide jQuery, that means they will not have to reload it and ultimately makes your site render quicker - bonus points!

h4. /extra-options-non-core/jquery/jquery-yepnope.txp

For advanced users, you can alternative load jQuery via "yepnope":http://yepnopejs.com/.

h4. /extra-options-non-core/jquery/js/jquery.js

The ubiquitous "jQuery":http://jquery.com/ JavaScript library is used on thousands of sites worldwide. Place this file into your root /js/ directory.

h2. Extra code option: page_title

h4. /extra-options-non-core/page_title/page_title.misc.txp

Use this form in your site to provide more context focused page titles, it sets up a variable to check what section you are in and provide specific title content. Based on an example by Els Lepelaars. Create a new form in the system with name of 'page_title' and type of 'misc', then copy/paste the code from this file into it. This form can then be called from your page/form templates by inserting @<txp:output_form form="page_title" />@ into the @<head>@ section.

h2. Extra code option: recent_articles

h4. /extra-options-non-core/recent_articles/recent_articles.css

CSS code specific to the recent articles section. If you using Sass then refer to the file below instead. Paste this in just before the end of the @media screen section of the stylesheet (i.e. the section before the size specific media queries begin).

h4. /extra-options-non-core/recent_articles/recent_articles.scss

Sass version of the above CSS file - if you are using Sass to author your CSS then paste this code into the @default.scss@ instead of into the standard CSS file. Paste this in just before the end of the @media screen section of the stylesheet (i.e. the section before the size specific media queries begin).

h4. /extra-options-non-core/recent_articles/recent_articles.txp

Either paste this file into page templates before the end of the @role="complementary"@ sidebar. Or put a @<txp:output_form form="recent_articles" />@ tag in your page templates @role="complementary"@ sidebar instead, create a new form in the system with name of 'recent_articles' and type of 'misc', then copy/paste the code from this form into it.

h2. Extra code option: slider UNFINISHED

h4. CURRENTLY AWAITING VERSION2 OF "SWIPE":http://swipejs.com/

h2. Extra code option: twitter

h4. /extra-options-non-core/twitter/twitter_tweet.txp

Add a Twitter 'Tweet' button to each of your articles. Paste the code from that form into your default.article.txp form (around line 25 is recommended).